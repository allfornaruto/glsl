{
  "ver": "1.0.25",
  "uuid": "c734989d-e29b-4d5e-b577-c43ebcc0e732",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  vec4 c_ColorLinear2RGB_main_4 (vec4 Color) {\n    vec3 sRGBLo = Color.rgb * 12.92;\n    vec3 sRGBHi = (pow(max(abs(Color.rgb), 1.192092896e-07), vec3(1.0 / 2.4, 1.0 / 2.4, 1.0 / 2.4)) * 1.055) - 0.055;\n    return vec4(\n        Color.r <= 0.0031308 ? sRGBLo.r : sRGBHi.r,\n        Color.g <= 0.0031308 ? sRGBLo.g : sRGBHi.g,\n        Color.b <= 0.0031308 ? sRGBLo.b : sRGBHi.b,\n        Color.a\n    );\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec4 out_Color_ColorLinear2RGB_4 = c_ColorLinear2RGB_main_4(texture2D(texture, v_uv0));\n    gl_FragColor = c_Output_main_1(vec4(out_Color_ColorLinear2RGB_4));\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n};\n  vec4 c_ColorLinear2RGB_main_4 (vec4 Color) {\n    vec3 sRGBLo = Color.rgb * 12.92;\n    vec3 sRGBHi = (pow(max(abs(Color.rgb), 1.192092896e-07), vec3(1.0 / 2.4, 1.0 / 2.4, 1.0 / 2.4)) * 1.055) - 0.055;\n    return vec4(\n        Color.r <= 0.0031308 ? sRGBLo.r : sRGBHi.r,\n        Color.g <= 0.0031308 ? sRGBLo.g : sRGBHi.g,\n        Color.b <= 0.0031308 ? sRGBLo.b : sRGBHi.b,\n        Color.a\n    );\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec4 out_Color_ColorLinear2RGB_4 = c_ColorLinear2RGB_main_4(texture2D(texture, v_uv0));\n    gl_FragColor = c_Output_main_1(vec4(out_Color_ColorLinear2RGB_4));\n}"
      }
    }
  ],
  "subMetas": {}
}