{
  "ver": "1.0.25",
  "uuid": "f3a2bee3-3698-4c65-afdf-17ed1aeee6e4",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  vec2 c_UV0_main_8() {\n    return v_uv0;\n}\nvec2 c_WaveSquare2_main_14 (vec2 Input) {\n    vec2 v = fract(Input);\n    return 1.0 - 2.0 * sign(v) * floor(abs(v) + 0.5);\n}\nvec2 c_Split2_main_11(vec2 Input) {\n    return Input;\n}\nvec4 c_4To4_main_10(float InputA, float InputB, float InputC, float InputD) {\n    return vec4(InputA, InputB, InputC, InputD);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec2 out_UV_UV0_8 = c_UV0_main_8();\n    vec2 out_Output_WaveSquare2_14 = c_WaveSquare2_main_14(vec2(out_UV_UV0_8));\n    vec2 out_Output_Split2_11 = c_Split2_main_11(vec2(out_Output_WaveSquare2_14));\n    float out_x_Split2_11 = out_Output_Split2_11.x;\n    float out_y_Split2_11 = out_Output_Split2_11.y;\n    vec4 out_Output_4To4_10 = c_4To4_main_10(out_x_Split2_11, out_y_Split2_11, 1.0, 1.0);\n    gl_FragColor = c_Output_main_1(vec4(out_Output_4To4_10));\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n};\n  vec2 c_UV0_main_8() {\n    return v_uv0;\n}\nvec2 c_WaveSquare2_main_14 (vec2 Input) {\n    vec2 v = fract(Input);\n    return 1.0 - 2.0 * sign(v) * floor(abs(v) + 0.5);\n}\nvec2 c_Split2_main_11(vec2 Input) {\n    return Input;\n}\nvec4 c_4To4_main_10(float InputA, float InputB, float InputC, float InputD) {\n    return vec4(InputA, InputB, InputC, InputD);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec2 out_UV_UV0_8 = c_UV0_main_8();\n    vec2 out_Output_WaveSquare2_14 = c_WaveSquare2_main_14(vec2(out_UV_UV0_8));\n    vec2 out_Output_Split2_11 = c_Split2_main_11(vec2(out_Output_WaveSquare2_14));\n    float out_x_Split2_11 = out_Output_Split2_11.x;\n    float out_y_Split2_11 = out_Output_Split2_11.y;\n    vec4 out_Output_4To4_10 = c_4To4_main_10(out_x_Split2_11, out_y_Split2_11, 1.0, 1.0);\n    gl_FragColor = c_Output_main_1(vec4(out_Output_4To4_10));\n}"
      }
    }
  ],
  "subMetas": {}
}