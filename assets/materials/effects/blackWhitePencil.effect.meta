{
  "ver": "1.0.25",
  "uuid": "fa58c412-34d5-45b6-a9cc-f355c9aa1215",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  uniform vec2 uSize;\nuniform float uOffset;\n  vec2 c_UV0_main_4() {\n    return v_uv0;\n}\nvec4 c_BlackWhitePencil_filter_3(mat3 c_BlackWhitePencil_filter_3, sampler2D tex, vec2 coord, vec2 texSize, float offset)\n{\n    vec4 outCol = vec4(0, 0, 0, 0);\n    for (int i = 0; i < 3; i++)\n    {\n        for (int j = 0; j < 3; j++)\n        {\n            vec2 newCoord = vec2(coord.x + (float(i) - 1.0) * offset, coord.y + (float(j) - 1.0) * offset);\n            vec2 newUV = vec2(newCoord.x / texSize.x, newCoord.y / texSize.y);\n            outCol += texture2D(tex, newUV) * c_BlackWhitePencil_filter_3[i][j];\n        }\n    }\n    return outCol;\n}\nvec4 c_BlackWhitePencil_main_3(sampler2D Tex, vec2 UV, vec2 Size, float Offset)\n{\n    mat3 pencilFilter = mat3(-0.5, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.5);\n    vec2 coord = vec2(UV.x * Size.x, UV.y * Size.y);\n    vec4 filterCol = c_BlackWhitePencil_filter_3(pencilFilter, Tex, coord, Size, Offset);\n    float gray = 0.3 * filterCol.x + 0.59 * filterCol.y + 0.11 * filterCol.z;\n    gray = abs(gray);\n    gray = 1.0 - gray;\n    return vec4(gray, gray, gray, filterCol.a);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec2 out_UV_UV0_4 = c_UV0_main_4();\n    vec4 out_Output_BlackWhitePencil_3 = c_BlackWhitePencil_main_3(texture, vec2(out_UV_UV0_4), vec2(uSize), uOffset);\n    gl_FragColor = c_Output_main_1(vec4(out_Output_BlackWhitePencil_3));\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  vec2 uSize;\n  float uOffset;\n};\n  vec2 c_UV0_main_4() {\n    return v_uv0;\n}\nvec4 c_BlackWhitePencil_filter_3(mat3 c_BlackWhitePencil_filter_3, sampler2D tex, vec2 coord, vec2 texSize, float offset)\n{\n    vec4 outCol = vec4(0, 0, 0, 0);\n    for (int i = 0; i < 3; i++)\n    {\n        for (int j = 0; j < 3; j++)\n        {\n            vec2 newCoord = vec2(coord.x + (float(i) - 1.0) * offset, coord.y + (float(j) - 1.0) * offset);\n            vec2 newUV = vec2(newCoord.x / texSize.x, newCoord.y / texSize.y);\n            outCol += texture2D(tex, newUV) * c_BlackWhitePencil_filter_3[i][j];\n        }\n    }\n    return outCol;\n}\nvec4 c_BlackWhitePencil_main_3(sampler2D Tex, vec2 UV, vec2 Size, float Offset)\n{\n    mat3 pencilFilter = mat3(-0.5, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.5);\n    vec2 coord = vec2(UV.x * Size.x, UV.y * Size.y);\n    vec4 filterCol = c_BlackWhitePencil_filter_3(pencilFilter, Tex, coord, Size, Offset);\n    float gray = 0.3 * filterCol.x + 0.59 * filterCol.y + 0.11 * filterCol.z;\n    gray = abs(gray);\n    gray = 1.0 - gray;\n    return vec4(gray, gray, gray, filterCol.a);\n}\nvec4 c_Output_main_1(vec4 Color) {\n    return Color;\n}\nvoid main()\n{\n    vec2 out_UV_UV0_4 = c_UV0_main_4();\n    vec4 out_Output_BlackWhitePencil_3 = c_BlackWhitePencil_main_3(texture, vec2(out_UV_UV0_4), vec2(uSize), uOffset);\n    gl_FragColor = c_Output_main_1(vec4(out_Output_BlackWhitePencil_3));\n}"
      }
    }
  ],
  "subMetas": {}
}