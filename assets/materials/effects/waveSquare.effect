
CCEffect %{
techniques: 
  - passes: 
      - vert: vs
        frag: fs
        blendState: 
          targets: 
            - blend: true
        rasterizerState: 
          cullMode: none
        properties: 
          texture: 
            value: white
}%
        
CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    #if USE_TEXTURE
        in vec2 a_uv0;
        out vec2 v_uv0;
    #endif  
    in vec4 a_color;
    out vec4 v_color;

    void main () {
        mat4 mvp;
        #if CC_USE_MODEL
            mvp = cc_matViewProj * cc_matWorld;
        #else
            mvp = cc_matViewProj;
        #endif

        #if USE_TEXTURE
            v_uv0 = a_uv0;
        #endif

        #if USE_TINT
            // clear warning for spine
        #endif

        v_color = a_color;
        gl_Position = mvp * vec4(a_position, 1);
    }
}%
        
CCProgram fs %{
    precision highp float;
    #include <cc-global>
    #if USE_TEXTURE
        in vec2 v_uv0;
        uniform sampler2D texture;
    #endif
    in vec4 v_color;
    uniform Constant {
	};

    vec2 c_UV0_main_8() {
	    return v_uv0;
	}
	vec2 c_WaveSquare2_main_14 (vec2 Input) {
	    vec2 v = fract(Input);
	    return 1.0 - 2.0 * sign(v) * floor(abs(v) + 0.5);
	}
	vec2 c_Split2_main_11(vec2 Input) {
	    return Input;
	}
	vec4 c_4To4_main_10(float InputA, float InputB, float InputC, float InputD) {
	    return vec4(InputA, InputB, InputC, InputD);
	}
	vec4 c_Output_main_1(vec4 Color) { 
	    return Color; 
	}
	void main()                                    
	{                                              
	    vec2 out_UV_UV0_8 = c_UV0_main_8();
	    vec2 out_Output_WaveSquare2_14 = c_WaveSquare2_main_14(vec2(out_UV_UV0_8));
	    vec2 out_Output_Split2_11 = c_Split2_main_11(vec2(out_Output_WaveSquare2_14));
	    float out_x_Split2_11 = out_Output_Split2_11.x;
	    float out_y_Split2_11 = out_Output_Split2_11.y;
	    vec4 out_Output_4To4_10 = c_4To4_main_10(out_x_Split2_11, out_y_Split2_11, 1.0, 1.0);
	    gl_FragColor = c_Output_main_1(vec4(out_Output_4To4_10));
	}                                              
	
}%
        